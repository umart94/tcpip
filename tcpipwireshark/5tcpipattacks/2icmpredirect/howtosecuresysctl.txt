How to edit the sysctl configuration file
Log in to your Linux server or desktop and open a terminal window. From that terminal, issue the command:

sudo nano /etc/sysctl.conf
The first option to look for is:

#net.ipv4.ip_forward=1
Change that line to:

net.ipv4.ip_forward=0
The next line to edit is:

#net.ipv4.conf.all.send_redirects = 0
Change that to:

net.ipv4.conf.all.send_redirects = 0
Add the following line under that:

net.ipv4.conf.default.send_redirects = 0
Look for the line:

#net.ipv4.conf.all.accept_redirects = 0
Change that to:

net.ipv4.conf.all.accept_redirects = 0
Add the following line under that:

net.ipv4.conf.default.accept_redirects = 0
Finally, add the following lines to the bottom of the file:

net.ipv4.icmp_ignore_bogus_error_responses = 1
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_syn_backlog = 2048
net.ipv4.tcp_synack_retries = 3
net.ipv4.netfilter.ip_conntrack_tcp_timeout_syn_recv=45
The above lines do the following:

Enable Bad Error Message Protection

Enable SYN cookies to ensure a server avoids dropping connections when the SYN queue fills up

Increase the SYS backlog queue size to 2048

close the SYN_RECV state connections earlier

Lowers the timeout value for SYN_RECV to help in reducing the SYN flood attack

Save and close the file.

How to reload the configuration
You can reload the configuration issue the command:

sudo sysctl -p
One caveat to the sysctl -p command is I found it didn't load the tcp_max_syn_backlog properly. It wasn't until a reboot that the 2048 value was added. So, after running the sudo sysctl -p command, issue the command:

sudo less /proc/sys/net/ipv4/tcp_max_syn_backlog
Make sure the value presented is 2048.

If the value is anything less, reboot the server.

At this point, your Linux server should be better protected against SYN attacks and IP address spoofing. Enjoy that newfound security.
















###################################################################
# Additional settings - these settings can improve the network
# security of the host and prevent against some network attacks
# including spoofing attacks and man in the middle attacks through
# redirection. Some network environments, however, require that these
# settings are disabled so review and enable them as needed.
#
# Do not accept ICMP redirects (prevent MITM attacks)
net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
# _or_
# Accept ICMP redirects only for gateways listed in our default
# gateway list (enabled by default)
# net.ipv4.conf.all.secure_redirects = 1
#
# Do not send ICMP redirects (we are not a router)
net.ipv4.conf.all.send_redirects = 0



Mind that if forwarding is disabled (we are not a router) value of net.ipvX.conf.all.accept_redirects will be ORed interface-specific value e.g. net.ipvX.conf.eth0.accept_redirects. send_redirects is always ORed.

Full fix would be then:

net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv4.conf.all.send_redirects = 0

net.ipv4.conf.default.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0
net.ipv4.conf.default.send_redirects = 0
In order to make use of 'default' settings network interfaces must be setup again.









